read `qEW.txt`:

print(`The list of length 21 whose i-th entry is the enumerating function`):
print(`for the area under Dyck paths of length i-1 is`);
print(``):
L:=qnwdK({[1,1],[1,-1]}, 20,q):
print(L):
print(``):
print(`Note: this gives us the following enumerating function for areas under Dyck paths of length 0 through 20`):
d:=add(L[i+1]*x^i,i=0..20);
print(``): print(``): print(`----------------------------`): print(``): print(``):

print(`This can be used to test`):
print(`the enumerating function for the areas under Dyck Paths of length 0 through K`):
print(`given by SeqF1`):
SeqF1(1,0,x^2*q,q,x,20);
print(``): print(``): print(`----------------------------`):print(`----------------------------`):  print(``): print(``):
print(`It can also be used to test`):
print(`the k-th derivative with respect to q of d(x,q), where d(x,q) is the`):
print(`bivariate weight enumerator for Dyck paths of length n and area m,`):
print(`evaluated at q=1`):
print(`
DyckDer:=DerK(1,0,x^2*q,q,x,15,f)`):

DyckDer:=DerK(1,0,x^2*q,q,x,15,f):
print(``): print(``): print(`----------------------------`): print(``): print(``):
print(`For example:`): 
print(`The Maclaurin polynomial of order 20 of the seventh entry of the list DyckDer`):
print(`should be`):
print(`the Maclaurin polynomial of order 20 of the sixth derivative with respect to q of d(x,q)`):
print(`evaluated at q=1`):
print(``):
print(`The Maclaurin polynomial of order 20 of the seventh entry of the list DyckDer is`):
add(coeff(taylor(DyckDer[7],x=0,24),x,i)*x^i,i=0..20);
print(`which is indeed equal to the 6th derivative of d evaluated at q=1`):
subs(q=1,diff(d,q,q,q,q,q,q));
